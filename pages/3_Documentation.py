import streamlit as st
from utils.translations import get_translation

def documentation_page():
    st.title("Документация по финансовой модели")
    
    st.markdown("""
    ## Основные компоненты расчета
    
    ### Базовые параметры начисления
    - Процент кэшбэка: 15% от суммы покупки (настраиваемый параметр)
    - Процент использования баллов: 70% от начисленных баллов (настраиваемый параметр)
    
    ### Расчет выручки
    1. Кэшбэк = Оборот × Процент кэшбэка
    2. Используемые баллы = Кэшбэк × Процент использования баллов
    3. Комиссионная выручка = (Используемые баллы × Комиссия обмена) + (Начисленный кэшбэк × Комиссия начисления)
    4. Выручка от подписок = Количество подписчиков × Стоимость подписки
    5. Общая выручка = Комиссионная выручка + Выручка от подписок + Рекламная выручка
    
    ### Расчет расходов
    1. Ежемесячные расходы = ФОТ + Маркетинг + Инфраструктура
    2. Темпы роста применяются ежемесячно по формуле сложного роста
    3. Общие расходы = Сумма всех категорий расходов
    
    ### Расчет прибыли
    - Ежемесячная прибыль = Общая выручка - Общие расходы
    - ROI = (Прибыль / Общие расходы) × 100
    """)
    
    st.markdown("""
    ## История изменений модели
    
    ### Обновление от 16.12.2024
    
    #### Изменения в расчете ФОТ
    - Реализована поэтапная система расчета ФОТ:
      - Первые 6 месяцев: ФОТ = 0 руб.
      - Месяцы 7-12: ФОТ = 2.5 млн руб.
      - Второй год: ФОТ = 4 млн руб.
      
    #### Изменения в расчете маркетинговых расходов
    - Внедрена новая система расчета:
      - Первые 6 месяцев: расходы на маркетинг = 0 руб.
      - С 7-го месяца: расходы на маркетинг = 5% от общего дохода
    
    #### Базовые параметры
    Оптимизирован набор базовых параметров:
    - Начальное количество пользователей
    - Темп роста 1й год
    - Темп роста 2й год
    - Средний чек
    - Процент кэшбэка (настраивается в разделе Parameter Management)
    - Процент использования баллов (настраивается в разделе Parameter Management)
    
    > **Примечание**: Все параметры модели можно настроить в разделе Parameter Management, включая создание собственных сценариев с уникальными значениями параметров. Изменения сохраняются и доступны для сравнения в разделе Scenario Analysis.
    """)

if __name__ == "__main__":
    documentation_page()